<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 511.434 511.434" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><script id="metastreaminitscript">(function() {
    document.getElementById('metastreaminitscript').remove()

    const INIT_TIMEOUT = 5e3
    const isFirefox = navigator.userAgent.toLowerCase().includes('firefox')

    //=========================================================================
    // document.createElement proxy
    //=========================================================================

    window.__metastreamMediaElements = new Set()

    // Proxy document.createElement to trap media elements created in-memory
    const origCreateElement = document.createElement
    const proxyCreateElement = function() {
      const element = origCreateElement.apply(document, arguments)
      if (window.__metastreamMediaElements &amp;&amp; element instanceof HTMLMediaElement) {
        window.__metastreamMediaElements.add(element)
      }
      return element
    }
    proxyCreateElement.toString = origCreateElement.toString.bind(origCreateElement)
    document.createElement = proxyCreateElement

    setTimeout(() =&gt; {
      if (window.__metastreamMediaElements) {
        window.__metastreamMediaElements.clear()
        window.__metastreamMediaElements = undefined
      }
    }, INIT_TIMEOUT)

    //=========================================================================
    // navigator.mediaSession proxy (Firefox)
    //=========================================================================

    if (isFirefox) {
      // stub out MediaSession API until Firefox supports this natively
      if (!navigator.mediaSession) {
        const noop = () =&gt; {}
        const mediaSessionStub = {
          __installedByMetastreamRemote__: true,
          setActionHandler: noop
        }
        Object.defineProperty(window.navigator, 'mediaSession', {
          value: mediaSessionStub,
          enumerable: false,
          writable: true
        })

        function MediaMetadata(metadata) {
          Object.assign(this, metadata)
        }
        window.MediaMetadata = MediaMetadata
      }

      const { mediaSession } = navigator

      // Capture action handlers for player.js proxy
      mediaSession._handlers = {}

      const _setActionHandler = mediaSession.setActionHandler
      mediaSession.setActionHandler = function(name, handler) {
        mediaSession._handlers[name] = handler
        _setActionHandler.apply(mediaSession, arguments)
      }
    }

    //=========================================================================
    // document.domain fix (Firefox)
    //=========================================================================

    if (isFirefox) {
      const domains = ['twitch.tv', 'crunchyroll.com']

      // Fix for setting document.domain in sandboxed iframe
      try {
        const { domain } = document
        if (domain &amp;&amp; domains.some(d =&gt; domain.includes(d))) {
          Object.defineProperty(document, 'domain', {
            value: domain,
            writable: true
          })
        }
      } catch (e) {}
    }

    //=========================================================================
    // Inline script embed prevention fix
    //=========================================================================

    const observeScripts = () =&gt; {
      const scriptSnippets = [
        { code: 'window.top !== window.self', replacement: 'false' },
        { code: 'self == top', replacement: 'true' },
        { code: 'top.location != window.location', replacement: 'false' }
      ]

      const getAddedScripts = mutationList =&gt;
        mutationList.reduce((scripts, mutation) =&gt; {
          if (mutation.type !== 'childList') return scripts
          const inlineScripts = Array.from(mutation.addedNodes).filter(
            node =&gt; node instanceof HTMLScriptElement &amp;&amp; node.textContent.length &gt; 0
          )
          return inlineScripts.length &gt; 0 ? [...scripts, ...inlineScripts] : scripts
        }, [])

      // Modifies inline scripts to allow embedding content in iframe
      const inlineScriptModifier = mutationsList =&gt; {
        const scripts = getAddedScripts(mutationsList)
        for (let script of scripts) {
          for (let snippet of scriptSnippets) {
            if (script.textContent.includes(snippet.code)) {
              script.textContent = script.textContent.split(snippet.code).join(snippet.replacement)
            }
          }
        }
      }

      const observer = new MutationObserver(inlineScriptModifier)
      observer.observe(document.documentElement, { childList: true, subtree: true })

      // Stop watching for changes after we finish loading
      window.addEventListener('load', () =&gt; observer.disconnect())
    }

    observeScripts()
  }());</script><g xmlns="http://www.w3.org/2000/svg"><path d="m447.021 92.5c-38.605-44.509-91.461-74.174-149.195-83.851-2.556-3.753-6.616-6.253-11.175-6.8-10.228-1.227-20.636-1.849-30.934-1.849-9.232 0-18.552.497-27.701 1.477-4.616.494-8.738 2.954-11.358 6.697-58.431 9.061-112.026 38.504-151.276 83.225-40.504 46.149-62.81 105.419-62.81 166.891 0 67.617 26.332 131.188 74.145 179 47.813 47.813 111.383 74.145 179 74.145 43.359 0 86.144-11.152 123.729-32.252 36.428-20.449 67.547-49.907 89.994-85.188 2.224-3.495 1.193-8.131-2.302-10.354-3.496-2.225-8.131-1.192-10.354 2.302-21.123 33.199-50.405 60.919-84.682 80.16-35.348 19.844-75.594 30.332-116.387 30.332-63.611 0-123.415-24.771-168.394-69.751s-69.749-104.785-69.749-168.395c0-57.829 20.983-113.584 59.084-156.995 36.065-41.093 84.996-68.471 138.458-77.667.163.374.336.744.529 1.108v.001l15.883 29.86c-48.578 5.721-93.222 28.484-126.715 64.874-36.208 39.339-55.449 90.372-54.181 143.698 1.183 49.714 20.419 97.276 54.167 133.927 1.479 1.606 3.496 2.42 5.519 2.42 1.816 0 3.637-.655 5.078-1.982 3.047-2.806 3.243-7.551.437-10.598-4.877-5.296-9.426-10.839-13.637-16.596l97.427-65.376c1.785 2.136 3.687 4.194 5.732 6.144 2.827 2.696 5.838 5.124 8.987 7.304l-56.229 102.971c-6.816-4.083-13.396-8.598-19.687-13.541-3.256-2.557-7.972-1.993-10.531 1.264s-1.993 7.972 1.264 10.531c36.066 28.339 80.853 43.799 126.611 43.799 1.607 0 3.216-.02 4.826-.058 54.697-1.302 105.667-23.882 143.523-63.582s57.987-91.687 56.686-146.383c-1.215-51.081-21.349-99.605-56.692-136.635-32.47-34.018-75.184-55.708-121.274-61.833l15.888-29.872c.167-.313.32-.631.464-.952 52.8 9.754 101.037 37.323 136.5 78.208 37.513 43.248 58.172 98.636 58.172 155.961 0 35.063-7.458 68.853-22.167 100.429-1.75 3.755-.124 8.217 3.631 9.966 1.024.477 2.102.703 3.162.703 2.826 0 5.532-1.604 6.803-4.335 15.64-33.574 23.57-69.494 23.57-106.763.002-60.935-21.96-119.813-61.839-165.789zm-331.173 37.127c2.832-3.077 5.757-6.04 8.755-8.905l77.526 88.052c-4.598 4.972-8.438 10.458-11.449 16.329l-109.485-42.329c8.381-19.293 20.021-37.25 34.653-53.147zm138.489 70.668c15.479-.391 30.163 5.326 41.392 16.033 11.229 10.706 17.615 25.119 17.982 40.582.368 15.463-5.326 30.162-16.033 41.391s-25.119 17.615-40.582 17.982c-15.476.37-30.163-5.327-41.392-16.033s-17.615-25.119-17.982-40.582c-.368-15.463 5.326-30.162 16.033-41.391 10.707-11.228 25.12-17.615 40.582-17.982zm43.497-1.622c-5.487-3.896-11.441-6.967-17.706-9.19l27.675-114.071c24.433 6.972 47.275 18.824 67.197 34.92zm120.201 158.605-97.707-65.008c3.125-5.91 5.412-12.209 6.8-18.758l116.726 12.552c-3.698 25.311-12.464 49.449-25.819 71.214zm-153.093-26.562c6.689-.842 13.155-2.604 19.267-5.198l56.675 102.825c-22.583 11.355-47.359 18.086-73.151 19.699zm-198.878-58.827c-.217-3.017-.366-6.043-.438-9.08-.541-22.75 2.956-45.047 10.152-66.048l109.48 42.327c-1.733 6.376-2.589 13.021-2.532 19.792zm27.77 85.995c-13.371-21.682-22.261-45.849-26.097-71.088l116.628-13.004c1.415 6.559 3.732 12.848 6.871 18.734zm133.657-32.256c7.1 2.986 14.659 4.825 22.454 5.431l2.791 117.348c-28.346-.441-56.218-7.302-81.46-19.834zm165.771 63.814c-11.818 12.394-25.019 22.979-39.261 31.626l-56.663-102.805c3.999-2.791 7.753-5.999 11.197-9.611 1.208-1.267 2.347-2.581 3.453-3.916l97.703 65.006c-4.996 6.864-10.469 13.45-16.429 19.7zm52.166-118.296-116.722-12.551c.003-.68.018-1.359.001-2.042-.145-6.077-1.028-12.025-2.603-17.742l109.275-42.742c6.388 18.411 9.956 37.845 10.428 57.7.139 5.83.003 11.626-.379 17.377zm-15.517-89.044-109.288 42.747c-3.039-5.875-6.894-11.352-11.508-16.292l77.176-88.351c2.373 2.246 4.701 4.55 6.969 6.927 15.494 16.232 27.828 34.848 36.651 54.969zm-136.684-110.229-27.678 114.08c-3.799-.511-7.662-.742-11.568-.654-2.826.067-5.62.313-8.38.695l-9.758-39.539c-.993-4.021-5.061-6.482-9.079-5.484-4.021.992-6.477 5.057-5.485 9.078l9.754 39.524c-6.271 2.251-12.21 5.354-17.669 9.265l-77.527-88.053c19.864-16.21 42.631-28.127 67.071-35.177l10.711 43.401c.844 3.418 3.906 5.705 7.276 5.705.595 0 1.2-.071 1.803-.221 4.021-.992 6.477-5.057 5.485-9.078l-10.708-43.388c7.111-1.452 14.336-2.508 21.65-3.143l4.127 7.76c2.764 5.196 8.136 8.424 14.021 8.424 5.886 0 11.258-3.228 14.022-8.424l3.987-7.495c6.045.62 12.031 1.534 17.945 2.724zm-7.744-53.844-21.13 39.726c-.009.017-.018.033-.026.049l-6.274 11.796c-.075.14-.249.467-.779.467-.529 0-.704-.327-.778-.468l-27.61-51.908c-.06-.112-.217-.409-.002-.814.229-.433.605-.473.729-.486 8.62-.923 17.403-1.391 26.104-1.391 9.703 0 19.51.586 29.148 1.742.114.014.416.05.618.438.148.284.148.57 0 .849z" fill="#ffffff" data-original="#000000" style=""/><path d="m221.182 259.708 10.041 7.296-3.836 11.805c-1.595 4.912.14 10.252 4.319 13.287 4.178 3.035 9.792 3.034 13.969-.001l10.042-7.295 10.042 7.295c2.089 1.518 4.537 2.277 6.985 2.276 2.448 0 4.896-.759 6.984-2.275 4.179-3.035 5.914-8.375 4.318-13.288l-3.835-11.804 10.041-7.295c4.178-3.036 5.913-8.375 4.317-13.287s-6.138-8.212-11.303-8.212h-12.412l-3.835-11.804c-1.596-4.912-6.138-8.212-11.302-8.212s-9.706 3.3-11.302 8.212l-3.835 11.804h-12.412c-5.165 0-9.707 3.3-11.303 8.212s.139 10.251 4.317 13.286zm21.661-6.498c5.164 0 9.706-3.3 11.302-8.212l1.572-4.837 1.572 4.838c1.597 4.911 6.139 8.211 11.302 8.211h5.085l-4.113 2.988c-4.179 3.036-5.915 8.376-4.318 13.287l1.572 4.838-4.113-2.988c-4.179-3.038-9.795-3.038-13.973-.001l-4.115 2.989 1.572-4.837c1.597-4.912-.139-10.252-4.317-13.287l-4.114-2.989z" fill="#ffffff" data-original="#000000" style=""/></g></g></svg>
